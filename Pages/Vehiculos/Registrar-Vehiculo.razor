@page "/registrar-vehiculo"

<div class="registrar-vehicul">

        <a href="/menu">  <i class="fas fa-backspace"></i></a>
    <div class="contenido-registrar-vehicul">

                <h2 class="text-center">Registrar vehiculo</h2>
    @if (tipos == null) {
        <Cargando></Cargando>
    }
    else {
        <EditForm Model="vehiculo" OnValidSubmit="Submit">
            <DataAnnotationsValidator/>


                <InputText @bind-Value="vehiculo.Marca" placeholder="Marca" />

                <InputText @bind-Value="vehiculo.Modelo" placeholder="Modelo" />


                <InputText @bind-Value="vehiculo.Año" type="number" placeholder="Año"/>

                <InputText @bind-Value="vehiculo.Color" placeholder="Color"/>



                <h4> Precio por Dia: </h4>
                <InputNumber @bind-Value="vehiculo.PrecioDia" placeholder="Precio por Dia"/>




                <h4> Tipo: </h4>
                <InputSelect @bind-Value="vehiculo.TipoId" class="input">
                    <option value="" disabled selected>Tipo</option>
                    @foreach(var tipo in tipos) {
                        <option value="@tipo.Id">@tipo.Nombre</option>
                    }
                </InputSelect>



                <h4> Capacidad de Carga: </h4>
                <InputNumber @bind-Value="vehiculo.Carga" placeholder="Capacidad de Carga"/>



                <h4> Cantidad de Pasajeros: </h4>
                <InputNumber @bind-Value="vehiculo.Pasajeros" placeholder="Cantidad de Pasajeros"/>


                <InputText @bind-Value="vehiculo.Matricula" placeholder="Matricula"/>



                <InputText @bind-Value="vehiculo.MarcaSeguro"  placeholder="Marca del Seguro"/>




                <InputText @bind-Value="vehiculo.NumeroSeguro" placeholder="Numero del Seguro"/>


                <h4> Foto: </h4>
                <div class=" col-md-6">
                    <InputFile OnChange="InputImage" accept="image/png, image/jpeg" />
                    <div class="mx-auto">
                        <img src="@vehiculo.Foto" class="m-2">
                    </div>
                </div>




                <h4> Ubicacion: </h4>
                <div style="height: 300px" class="col-md-6">
                    <LeafletMap Map="mapa" />
                </div>



                <div class="mx-auto">
                    <ValidationSummary/>
                </div>



                <button type="submit" >Registrar</button>

        </EditForm>
    }
       </div>
</div>


  <svg class="wavessss" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320">
    <path fill="#00cba9" fill-opacity="1" d="M0,32L16,53.3C32,75,64,117,96,144C128,171,160,181,192,176C224,171,256,149,288,128C320,107,352,85,384,85.3C416,85,448,107,480,149.3C512,192,544,256,576,245.3C608,235,640,149,672,106.7C704,64,736,64,768,80C800,96,832,128,864,170.7C896,213,928,267,960,272C992,277,1024,235,1056,197.3C1088,160,1120,128,1152,128C1184,128,1216,160,1248,160C1280,160,1312,128,1344,106.7C1376,85,1408,75,1424,69.3L1440,64L1440,320L1424,320C1408,320,1376,320,1344,320C1312,320,1280,320,1248,320C1216,320,1184,320,1152,320C1120,320,1088,320,1056,320C1024,320,992,320,960,320C928,320,896,320,864,320C832,320,800,320,768,320C736,320,704,320,672,320C640,320,608,320,576,320C544,320,512,320,480,320C448,320,416,320,384,320C352,320,320,320,288,320C256,320,224,320,192,320C160,320,128,320,96,320C64,320,32,320,16,320L0,320Z"></path></svg>

@code
{
    private Vehiculo vehiculo = new Vehiculo();
    private List<TipoVehiculo> tipos = null;

    private Map mapa = null;
    private Marker ubicacionVehiculo = null;

    protected override async Task OnInitializedAsync() {
        tipos = await sc.TipoVehiculos.ToListAsync();

        mapa = new Map(jsr) {
            Center = new LatLng(18.9f, -70f),
            Zoom = 7.47f
        };

        ubicacionVehiculo = new Marker(19.5f, -69.65f) {
            Draggable = true,
            Title = "Selecciona tu ubicacion"
        };

        mapa.OnInitialized += () => {
            mapa.AddLayer(new TileLayer
            {
                UrlTemplate = "https://tile.openstreetmap.org/{z}/{x}/{y}.png",
                Attribution = "&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors",
            });
            mapa.AddLayer(ubicacionVehiculo);
        };

        mapa.OnClick += (Map sender, MouseEvent e) => {
            vehiculo.Latitud = e.LatLng.Lat;
            vehiculo.Longitud = e.LatLng.Lng;
            ubicacionVehiculo.Position = e.LatLng;
            mapa.RemoveLayer(ubicacionVehiculo);
            mapa.AddLayer(ubicacionVehiculo);
        };

        ubicacionVehiculo.OnDrag += (Marker sender, DragEvent e) => {
            vehiculo.Latitud = e.LatLng.Lat;
            vehiculo.Longitud = e.LatLng.Lng;
        };
    }

    private async Task Submit() {
        await sc.AddAsync(vehiculo);
        await sc.SaveChangesAsync();
        await Swal.FireAsync(
            $"Agregado",
            $"",
            SweetAlertIcon.Success
        );
        nm.NavigateTo("/listado-vehiculos");
    }

    private async Task InputImage(InputFileChangeEventArgs e) {
        var format = "image/jpg";

        var resizedImage = await e.GetMultipleFiles()[0].RequestImageFileAsync(format, 200, 200);
        var buffer = new byte[resizedImage.Size];
        await resizedImage.OpenReadStream().ReadAsync(buffer);

        var imageUri = $"data:{format};base64,{Convert.ToBase64String(buffer)}";

        vehiculo.Foto = imageUri;
    }
}
