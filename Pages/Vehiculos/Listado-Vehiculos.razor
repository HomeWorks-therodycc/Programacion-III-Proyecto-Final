@page "/listado-vehiculos"
@attribute [Authorize]

@if (vehiculos == null)
{
    <Cargando></Cargando>
}

else
{
    <div class="tabla-registro" id="tablamodal">
        <a href="/menu"> <i class="fas fa-arrow-left"></i></a>

        <div class="contenido-tabla-registro">
            <h2 class="text-center">Listado de Vehiculos</h2>
            <div class="row">
                <select class="col-md-3 form-control offset-md-1 Selectsss" @bind="campoFiltro">
                    <option value="Matricula">Matricula</option>
                    <option value="Marca">Marca</option>
                    <option value="Modelo">Modelo</option>
                    <option value="Año">Año</option>
                    <option value="Tipo.Nombre">Tipo</option>
                    <option value="Pasajeros">Cantidad de Pasajeros</option>
                    <option value="Carga">Capacidad de Carga</option>
                </select>
                <input type="text" class="col-md-7 form-control" @bind-value="textoFiltro" @oninput="filtrarVehiculos">
            </div>
            <hr>

            @if (vehiculosFiltrados.Count == 0)
            {
                <div class="text-center">
                    <h3>No se han encontrado Resultados con esas Especificaciones</h3>
                </div>
            }


            @foreach (var v in vehiculosFiltrados)
            {
                <table class="Tabla-Presentacion">
                    <tr class="Tabla-Cabeza">
                        <td>Foto</td>
                        <td>Matricula</td>
                        <td>Seguro</td>
                        <td>Precio por Dia</td>
                        <td>Tipo</td>
                        <td>Marca</td>
                    </tr>
                    <tr class="Tabla-Pie">
                        <td>
                            <img src="@v.Foto" width="70px" height="70px" style="object-fit: cover;" class="m-1">
                        </td>
                        <td>@v.Matricula</td>
                        <td>@v.SeguroCompleto</td>
                        <td>@v.PrecioDia.ToString("C0")</td>
                        <td>@v.Tipo.Nombre</td>
                        <td>@v.Marca</td>
                    </tr>
                    <tr class="Tabla-Cabeza">

                        <td>Modelo</td>
                        <td>Color</td>
                        <td>Pasajeros</td>
                        <td>Carga (kg)</td>
                        <td>Habilitado?</td>
                        <td></td>
                    </tr>
                    <tr class="Tabla-Pie">


                        <td>@v.Modelo</td>
                        <td>@v.Color</td>
                        <td>@v.Pasajeros</td>
                        <td>@v.Carga</td>
                        <td>
                            <label class="switch">
                                <input type="checkbox" checked="@v.Habilitado" @oninput="(e) => Habilitando(v, e)">
                                <span class="slider round"></span>
                            </label>
                        </td>
                        <td>
                            <button @onclick="() => Borrar(v)" class="btn btn-danger">
                                <i class="far fa-trash-alt"></i>
                            </button>
                            <a href="/editar-vehiculo/@v.Id" class="btn btn-info">
                                <i class="far fa-edit"></i>
                            </a>
                        </td>
                    </tr>
                </table>

            }
        </div>
    </div>

}
   <svg class="wavessss" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320">
    <path fill="#00cba9" fill-opacity="1" d="M0,32L16,53.3C32,75,64,117,96,144C128,171,160,181,192,176C224,171,256,149,288,128C320,107,352,85,384,85.3C416,85,448,107,480,149.3C512,192,544,256,576,245.3C608,235,640,149,672,106.7C704,64,736,64,768,80C800,96,832,128,864,170.7C896,213,928,267,960,272C992,277,1024,235,1056,197.3C1088,160,1120,128,1152,128C1184,128,1216,160,1248,160C1280,160,1312,128,1344,106.7C1376,85,1408,75,1424,69.3L1440,64L1440,320L1424,320C1408,320,1376,320,1344,320C1312,320,1280,320,1248,320C1216,320,1184,320,1152,320C1120,320,1088,320,1056,320C1024,320,992,320,960,320C928,320,896,320,864,320C832,320,800,320,768,320C736,320,704,320,672,320C640,320,608,320,576,320C544,320,512,320,480,320C448,320,416,320,384,320C352,320,320,320,288,320C256,320,224,320,192,320C160,320,128,320,96,320C64,320,32,320,16,320L0,320Z"></path></svg>


@code
{
    private List<Vehiculo> vehiculos = null;
    private List<Vehiculo> vehiculosFiltrados = null;

    private string campoFiltro = "Matricula";
    private string textoFiltro = "";

    protected override async Task OnInitializedAsync()
    {
        vehiculosFiltrados = vehiculos = await sc.Vehiculos.Include("Tipo").ToListAsync();
    }

    private void filtrarVehiculos(ChangeEventArgs e)
    {
        textoFiltro = e.Value.ToString();
        vehiculosFiltrados = vehiculos.FindAll(
        v => v.GetPropertyValue<String>(campoFiltro)
        .ToLower().Contains(textoFiltro.ToLower()));
    }

    private async Task Borrar(Vehiculo v) {
        var result = await Swal.FireAsync(new SweetAlertOptions() {
            Title = $"Esta seguro que desea eliminar el Vehiculo <br>{v.Informacion}?",
            Icon = SweetAlertIcon.Error,
            ImageUrl = v.Foto,
            ImageWidth = 100,
            ImageHeight = 100,
            ShowCancelButton = true,
            ConfirmButtonText = "Borrar",
                ConfirmButtonColor = "#dc3545",
            CancelButtonText = "Cancelar",
                CancelButtonColor = "#28a745"
        });

        if (!string.IsNullOrEmpty(result.Value))
        {
            sc.Remove(v);
            vehiculos.Remove(v);
            await sc.SaveChangesAsync();

            await Swal.FireAsync(
                "Borrado",
                $"El Cliente {v.Informacion} ha sido borrado",
                SweetAlertIcon.Warning
            );
        }
    }

    private async Task Habilitando(Vehiculo v, ChangeEventArgs e) {
        var Habilitar = Convert.ToBoolean(e.Value);

        v.Habilitado = Habilitar;
        await sc.SaveChangesAsync();
    }
}
